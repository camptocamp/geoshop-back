networks:
  geoshop:
    driver: bridge

services:
  db:
    image: postgis/postgis:15-3.4-alpine
    volumes:
      - "./resources/db:/docker-entrypoint-initdb.d:ro"
    environment:
      POSTGRES_USER: "${PGUSER}"
      POSTGRES_PASSWORD: "${PGPASSWORD}"
      POSTGRES_DB: "${PGDATABASE}"
      LANG: "en_US.utf8"
      LC_COLLATE: "en_US.utf8"
      LC_CTYPE: "en_US.utf8"
    env_file: .env
    ports:
      - 5432:5432
    networks:
      - geoshop
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -h 127.0.0.1 -U ${PGUSER} -d ${PGDATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: geoshop-api
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      oidcdemo:
        condition: service_healthy
    env_file: .env
    environment:
      PGHOST: "db"
      ECHO_USER_PASSWORD: "1234"
    command: >
      bash -c "
      python3 manage.py migrate &&
      python3 manage.py collectstatic --noinput &&
      python3 manage.py fixturize"
    volumes:
      - "static-files:/app/geoshop_back/static:rw"
    networks:
      - geoshop

  api:
    image: geoshop-api
    depends_on:
      db:
        condition: service_healthy
      oidcdemo:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    env_file: .env
    environment:
      PGHOST: "db"
    command: gunicorn wsgi -b :8000 --timeout 90
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://127.0.0.1:8000/health/readiness || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - "static-files:/app/geoshop_back/static:ro"
      - "./testdata:/testdata:ro"
    ports:
      - "8000:8000"
    networks:
      - geoshop

  oidcdemo:
    image: python:alpine
    command: sh -c "apk add curl && python -m http.server -d /data 1234"
    volumes:
      - ./testdata:/testdata:ro
      - ./testdata/openid-wellknown.json:/data/.well-known/openid-configuration:ro
    networks:
      - geoshop
    healthcheck:
      test: curl -f http://127.0.0.1:1234/.well-known/openid-configuration || exit 1,
      interval: 10s
      timeout: 20s
      retries: 5
volumes:
  static-files:
